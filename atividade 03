{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNkHTFpyFy3j3ikmpXfhmga",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/juanbismarck/projeto-01/blob/main/atividade%2003\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i0AxT8C-yhKo",
        "outputId": "646e3369-7145-4065-8075-41c5d8bdc3c1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--------------- Calculando Gols ---------------\n",
            "Média: 4.39 gols por atacante.\n",
            "Mediana: 2.0 gols.\n",
            "Mínimo: 0 gols.\n",
            "Máximo: 28 gols.\n",
            "Desvio Padrão: 5.59 gols.\n",
            "--------------- Calculando assistências ---------------\n",
            "Média : 1.58 assistências por atacante.\n",
            "Mediana: 1.0 assistências.\n",
            "Mínimo: 0 assistências.\n",
            "Máximo: 18 assistências.\n",
            "Desvio Padrão: 2.35 assistências.\n",
            "--------------- Calculando xG ---------------\n",
            "Média : 4.36 xG por atacante.\n",
            "Mediana: 2.7 xG.\n",
            "Mínimo: 0.0 xG.\n",
            "Máximo: 24.4 xG.\n",
            "Desvio Padrão: 4.95 xG.\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import kagglehub\n",
        "import os\n",
        "somaGls=0\n",
        "cont=0\n",
        "path = kagglehub.dataset_download(\"hubertsidorowicz/football-players-stats-2024-2025\")\n",
        "players=pd.read_csv(os.path.join(path, 'players_data-2024_2025.csv'))\n",
        "fwGls=players[players['Pos']=='FW']['Gls']\n",
        "for Gls in fwGls:\n",
        "  somaGls+=Gls\n",
        "  cont+=1\n",
        "print('-'*15,'Calculando Gols','-'*15)\n",
        "print(f'Média: {somaGls/cont:.2f} gols por atacante.')\n",
        "mediana_gls=fwGls.median()\n",
        "print(f'Mediana: {mediana_gls} gols.')\n",
        "minimo_gls=fwGls.min()\n",
        "print(f'Mínimo: {minimo_gls} gols.')\n",
        "maximo_gls=fwGls.max()\n",
        "print(f'Máximo: {maximo_gls} gols.')\n",
        "desvioP_gls=fwGls.std()\n",
        "print(f'Desvio Padrão: {desvioP_gls:.2f} gols.')\n",
        "somaAst=0\n",
        "cont=0\n",
        "fwAst=players[players['Pos']=='FW']['Ast']\n",
        "for Ast in fwAst:\n",
        "  somaAst+=Ast\n",
        "  cont+=1\n",
        "print('-'*15,'Calculando assistências','-'*15)\n",
        "print(f'Média : {somaAst/cont:.2f} assistências por atacante.')\n",
        "mediana_ast=fwAst.median()\n",
        "print(f'Mediana: {mediana_ast} assistências.')\n",
        "minimo_ast=fwAst.min()\n",
        "print(f'Mínimo: {minimo_ast} assistências.')\n",
        "maximo_ast=fwAst.max()\n",
        "print(f'Máximo: {maximo_ast} assistências.')\n",
        "desvioP_ast=fwAst.std()\n",
        "print(f'Desvio Padrão: {desvioP_ast:.2f} assistências.')\n",
        "somaxG=0\n",
        "cont=0\n",
        "fwxG=players[players['Pos']=='FW']['xG']\n",
        "for xG in fwxG:\n",
        "  somaxG+=xG\n",
        "  cont+=1\n",
        "print('-'*15, 'Calculando xG','-'*15)\n",
        "print(f'Média : {somaxG/cont:.2f} xG por atacante.')\n",
        "mediana_xG=fwxG.median()\n",
        "print(f'Mediana: {mediana_xG} xG.')\n",
        "minimo_xG=fwxG.min()\n",
        "print(f'Mínimo: {minimo_xG} xG.')\n",
        "maximo_xG=fwxG.max()\n",
        "print(f'Máximo: {maximo_xG} xG.')\n",
        "desvioP_xG=fwxG.std()\n",
        "print(f'Desvio Padrão: {desvioP_xG:.2f} xG.')\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('-'*15,'Calculando média e desvio padrão de minutos por idade','-'*15)\n",
        "print('-'*10,'até 20 anos','-'*10)\n",
        "somaMin=0\n",
        "cont=0\n",
        "min020=players[players['Age']<=20]['Min']\n",
        "for Min in min020:\n",
        "  somaMin+=Min\n",
        "  cont+=1\n",
        "print(f'Média: {somaMin/cont:.2f} minutos para jogadores até 20 anos.')\n",
        "desvioP_min=min020.std()\n",
        "print(f'Desvio Padrão: {desvioP_min:.2f} minutos para jogadores até 20 anos.')\n",
        "print('-'*10,'entre 21 e 25 anos','-'*10)\n",
        "somamin=0\n",
        "cont=0\n",
        "min21=players['Age'] >= 21\n",
        "min25=players['Age'] <= 25\n",
        "min2125=players[min21 & min25]['Min']\n",
        "for Min in min2125:\n",
        "  somaMin+=Min\n",
        "  cont+=1\n",
        "print(f'Média: {somaMin/cont:.2f} minutos para jogadores entre 21 e 25 anos.')\n",
        "desvioP_min=min2125.std()\n",
        "print(f'Desvio Padrão: {desvioP_min:.2f} minutos para jogadores entre 21 e 25 anos.')\n",
        "print('-'*10,'entre 26 e 30 anos','-'*10)\n",
        "somamin=0\n",
        "cont=0\n",
        "min26=players['Age']>=26\n",
        "min30=players['Age']<=30\n",
        "min2630=players[min26 & min30]['Min']\n",
        "for Min in min2125:\n",
        "  somaMin+=Min\n",
        "  cont+=1\n",
        "print(f'Média: {somaMin/cont:.2f} minutos para jogadores entre 26 e 30 anos.')\n",
        "desvioP_min=min2630.std()\n",
        "print(f'Desvio Padrão: {desvioP_min:.2f} minutos para jogadores entre 26 e 30 anos.')\n",
        "print('-'*10,'mais de 30 anos','-'*10)\n",
        "somaMin=0\n",
        "cont=0\n",
        "min30=players[players['Age']>30]['Min']\n",
        "for Min in min30:\n",
        "  somaMin+=Min\n",
        "  cont+=1\n",
        "print(f'Média: {somaMin/cont:.2f} minutos para jogadores com mais de 30 anos.')\n",
        "desvioP_min=min30.std()\n",
        "print(f'Desvio Padrão: {desvioP_min:.2f} minutos para jogadores com mais de 30 anos.')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LKTajix3VDsR",
        "outputId": "9bb3783d-f657-4768-a748-3812a9c98c08"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--------------- Calculando média e desvio padrão de minutos por idade ---------------\n",
            "---------- até 20 anos ----------\n",
            "Média: 497.91 minutos para jogadores até 20 anos.\n",
            "Desvio Padrão: 667.24 minutos para jogadores até 20 anos.\n",
            "---------- entre 21 e 25 anos ----------\n",
            "Média: 1317.82 minutos para jogadores entre 21 e 25 anos.\n",
            "Desvio Padrão: 901.49 minutos para jogadores entre 21 e 25 anos.\n",
            "---------- entre 26 e 30 anos ----------\n",
            "Média: 2470.00 minutos para jogadores entre 26 e 30 anos.\n",
            "Desvio Padrão: 907.68 minutos para jogadores entre 26 e 30 anos.\n",
            "---------- mais de 30 anos ----------\n",
            "Média: 1349.15 minutos para jogadores com mais de 30 anos.\n",
            "Desvio Padrão: 917.94 minutos para jogadores com mais de 30 anos.\n"
          ]
        }
      ]
    }
  ]
}